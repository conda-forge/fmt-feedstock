From c76957565c37bbbc0bd9ef2fb029e4d0ede6bc29 Mon Sep 17 00:00:00 2001
From: Victor Zverovich <victor.zverovich@gmail.com>
Date: Sat, 31 Aug 2019 06:34:32 -0700
Subject: [PATCH 009/186] FixedEnum -> StrongEnum and make it a regression test

---
 include/fmt/core.h  | 3 ++-
 test/format-test.cc | 6 ++++--
 2 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/include/fmt/core.h b/include/fmt/core.h
index 43db49df..66abfd4b 100644
--- a/include/fmt/core.h
+++ b/include/fmt/core.h
@@ -825,7 +825,8 @@ template <typename Context> struct arg_mapper {
             FMT_ENABLE_IF(std::is_enum<T>::value &&
                           !has_formatter<T, Context>::value &&
                           !has_fallback_formatter<T, Context>::value)>
-  FMT_CONSTEXPR auto map(const T& val) -> decltype(map(static_cast<typename std::underlying_type<T>::type>(val))) {
+  FMT_CONSTEXPR auto map(const T& val) -> decltype(
+      map(static_cast<typename std::underlying_type<T>::type>(val))) {
     return map(static_cast<typename std::underlying_type<T>::type>(val));
   }
   template <typename T,
diff --git a/test/format-test.cc b/test/format-test.cc
index 3d619e50..9ac9f24c 100644
--- a/test/format-test.cc
+++ b/test/format-test.cc
@@ -1906,9 +1906,11 @@ TEST(FormatTest, FormatterNotSpecialized) {
 }
 
 #if FMT_HAS_FEATURE(cxx_strong_enums)
-enum TestFixedEnum : short { B = 1 };
+enum big_enum : unsigned long long { big_enum_value = 5000000000ULL };
 
-TEST(FormatTest, FixedEnum) { EXPECT_EQ("1", fmt::format("{}", B)); }
+TEST(FormatTest, StrongEnum) {
+  EXPECT_EQ("5000000000", fmt::format("{}", big_enum_value));
+}
 #endif
 
 using buffer_range = fmt::buffer_range<char>;
-- 
2.21.0 (Apple Git-122.2)

